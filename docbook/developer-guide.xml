<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE book PUBLIC "-//OASIS//DTD DocBook XML V4.4//EN"
"http://www.oasis-open.org/docbook/xml/4.4/docbookx.dtd">
<!--
 Licensed to the Apache Software Foundation (ASF) under one
 or more contributor license agreements.  See the NOTICE file
 distributed with this work for additional information
 regarding copyright ownership.  The ASF licenses this file
 to you under the Apache License, Version 2.0 (the
 "License"); you may not use this file except in compliance
 with the License.  You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an
 "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 KIND, either express or implied.  See the License for the
 specific language governing permissions and limitations
 under the License.
-->
<book lang="en">
  <title>OTHERobjects Developer Guide</title>

  <bookinfo>
    <copyright>
      <year>2007</year>

      <holder>the OTHER media ltd</holder>
    </copyright>

    <releaseinfo>Version 0.1</releaseinfo>

    <productname>OTHERobjects</productname>

    <authorgroup>
      <corpauthor>OTHERobjects Development Team</corpauthor>
    </authorgroup>
  </bookinfo>

  <toc></toc>

  <chapter id="chapter-introduction">
    <title>Introduction</title>

    <section id="section-why-another-framework">
      <title>Who is this guide for?</title>

      <para>This guide is for developers who want to extend the capabilites of
      OTHERobjects beyond what is possible via the web interface and third
      party plugins. You'll need this guide if you want to:</para>

      <itemizedlist>
        <listitem>
          <para>Create custom site components</para>
        </listitem>

        <listitem>
          <para>Develop your own plugins</para>
        </listitem>

        <listitem>
          <para>Update and improve OTHERobjects itself</para>
        </listitem>
      </itemizedlist>

      <para>If you are just interested in building a standard website then you
      should read the Site Builder Guide instead. If you're not sure then you
      should start off with the Site Builder Guide and come back here when you
      need to. </para>
    </section>
  </chapter>

  <chapter id="chapter-using-the-framework">
    <title>Setting up your development environment</title>

    <section id="section-how-to-set-up">
      <title>Introduction</title>

      <para>OTHERobjects in a pure Java project based on the Spring framework
      and build with Maven. If you are an experienced Java developer you will
      probably have your own preferences for an IDE. build process and app
      server. In this case just skip ahead to the next section.</para>

      <para>However, if you're fairly new to Java or want a setup that will
      work with the minimum of fuss then this section will help you get your
      environment set up.</para>
    </section>

    <section>
      <title>Supported platforms</title>

      <para>OTHERobjects should run well on any platform that supports Java
      5.0. This includes Apple Mac OS X 10.4+, Microsoft Windows 2000/XP/Vista
      and most distributions of Linux. </para>

      <para>Although, OTHERobjects runs on Windows it is happiest on UNIX-like
      systems such an Mac OS X and Linux. Windown users may need to install
      CygWin.</para>
    </section>

    <section id="section-configuring-your-documentation">
      <title>Installing required software</title>

      <para>There is some key software that you will need before you can start
      developing with OTHERobjects.</para>

      <section>
        <title>Java</title>

        <para>You will need a JVM installed and version 5.0 is required. If
        your system does not come with a JVM installed we would recomment the
        latest Sun JDK from java.sun.com/download. Check that your JVM is
        installed:</para>

        <programlisting>brushed:~ rich$ java -version
java version "1.5.0_07"
Java(TM) 2 Runtime Environment, Standard Edition (build 1.5.0_07-164)
Java HotSpot(TM) Client VM (build 1.5.0_07-87, mixed mode, sharing)
brushed:~ rich$ </programlisting>
      </section>

      <section>
        <title>Apache Maven</title>

        <para>Next you'll need Apache Maven version 2.0.7 or greater. You can
        dowload it from: <uri>http://maven.apache.org/download.html</uri>.
        Once you have donwloaded and installed Maven you should make sure that
        the <emphasis role="bold">mvn</emphasis> command is included in your
        path:</para>

        <para><programlisting>brushed:~ rich$ mvn -version
Maven version: 2.0.7
brushed:~ rich$ </programlisting>ImageMagick</para>
      </section>

      <section>
        <title>ImageMagick</title>

        <para>We use ImageMagick for high quality image resizing. You need
        version 6.3 or later. Download a binary package from
        <uri>http://www.imagemagick.org/script/binary-releases.php</uri> and
        install it. You will need to set your paths and environment variables
        correctly. To test that you have the correct version is installed run
        the followin command:</para>

        <para><programlisting>brushed:~ rich$ convert -version
Version: ImageMagick 6.3.4 05/19/07 Q16 http://www.imagemagick.org
Copyright: Copyright (C) 1999-2007 ImageMagick Studio LLC

brushed:~ rich$ </programlisting></para>
      </section>

      <section>
        <title>Eclipse</title>

        <para>Finally you will need an IDE. We recommend Eclipse 3.3. Download
        <emphasis>Eclipse for JEE Developers</emphasis> from
        http://www.eclipse.org/downloads/.</para>

        <para>Once this is installed you should add the following plugins via
        the Update Manager:</para>

        <table>
          <title>Recommended Eclipse plugins</title>

          <tgroup cols="3">
            <thead>
              <row>
                <entry align="center">Plugin</entry>

                <entry align="center">Update Site</entry>

                <entry align="center">Functionality</entry>
              </row>
            </thead>

            <tbody>
              <row>
                <entry>Subversive 1.1.7</entry>

                <entry>http://www.polarion.org/projects/subversive/download/1.1/update-site/</entry>

                <entry>Subversion SCM intergation</entry>
              </row>

              <row>
                <entry>M2Eclipse 0.10</entry>

                <entry>http://m2eclipse.codehaus.org/update-dev/</entry>

                <entry>Maven integration</entry>
              </row>

              <row>
                <entry>SpringIDE 2.0.1</entry>

                <entry>http://springide.org/updatesite/</entry>

                <entry>Spring integration</entry>
              </row>

              <row>
                <entry>MoreUnit 0.8.2</entry>

                <entry>http://moreunit.sourceforge.net/org.moreunit.updatesite/</entry>

                <entry>Unit testing utilities</entry>
              </row>
            </tbody>
          </tgroup>
        </table>

        <para>See http://open.ncsu.edu/se/tutorials/install_plugin/ for a
        instructions on installing plugins.</para>

        <para>There are other plugins that you wish to add later but for now
        these essential ones will do.</para>

        <para>You should now launch Eclipse and check that your plugins are
        installed via the About Eclipse Platform menu option.</para>

        <para></para>
      </section>
    </section>

    <section>
      <title>Checking out the source code</title>

      <para></para>

      <mediaobject>
        <imageobject>
          <imagedata fileref="images/svn-setup.png" />
        </imageobject>
      </mediaobject>
    </section>
  </chapter>

  <chapter id="section-how-it-works">
    <title>Database support</title>

    <section id="section-ant-files">
      <title>H2 Embedded database</title>

      <para>The default database is H2.</para>
    </section>

    <section id="section-docbook-reference-files">
      <title>PostgreSQL</title>

      <para>The preferred advanced database is PostgreSQL.</para>
    </section>
  </chapter>

  <chapter id="section-acknowledgements">
    <title>Acknowledgements</title>

    <para>This document is based on the documentation for the Velocity DocBook
    Framework. Thanks guys.</para>

    <para><important>
        <para>Here is some stuff that I want to keep to test the
        formatting</para>
      </important>The Velocity project used a simple HTML based format called
    <firstterm>XDOC</firstterm> for its documentation for a very long time.
    However, <firstterm>XDOC</firstterm> is not really popular outside the
    Apache world<footnote>
        <para>And not even in the Apache world...</para>
      </footnote>, it renders somehow into HTML but no other formats (unless
    you consider a set of alpha and beta-level plugins for maven-1 and
    maven-2) and tool support for this format is not really there.</para>

    <para><figure id="figure-recommended-layout">
        <title>Recommended layout for a documentation project</title>

        <programlisting>&lt;root&gt;
  |
  +---- build.xml <co id="co-build-xml" linkends="ca-build-xml" />
  +---- project.properties <co id="co-project-properties"
            linkends="ca-project-properties" />
  |
  +-- src
       |
       +-- docbook <co id="co-docbook-sources" linkends="ca-docbook-sources" />
       |
       +-- styles
       |     |
       |     +-- pdf <co id="co-styles-pdf" linkends="ca-styles-pdf" />
       |     |
       |     +-- html <co id="co-styles-html" linkends="ca-styles-html" />
       |
       +-- css
       |    |
       |    +-- html <co id="co-css-html" linkends="ca-css-html" />
       |
       +-- images <co id="co-src-images" linkends="ca-src-images" /></programlisting>

        <calloutlist>
          <callout arearefs="co-build-xml" id="ca-build-xml">
            <para>ant build file</para>
          </callout>

          <callout arearefs="co-project-properties" id="ca-project-properties">
            <para>custom settings for your build</para>
          </callout>

          <callout arearefs="co-docbook-sources" id="ca-docbook-sources">
            <para>Docbook sources</para>
          </callout>

          <callout arearefs="co-styles-pdf" id="ca-styles-pdf">
            <para>Custom styles for PDF</para>
          </callout>

          <callout arearefs="co-styles-html" id="ca-styles-html">
            <para>Custom styles for HTML</para>
          </callout>

          <callout arearefs="co-css-html" id="ca-css-html">
            <para>CSS files for HTML</para>
          </callout>

          <callout arearefs="co-src-images" id="ca-src-images">
            <para>Image files for PDF/HTML</para>
          </callout>
        </calloutlist>
      </figure>Moreore usage, these files are copied to
    <literal>target/tmp</literal> using an ant filter set. This allows you to
    use the following replacements in the driver files:</para>

    <table id="ant-filter-tokens">
      <title>ant filter tokens in the stylesheet customization files</title>

      <tgroup cols="3">
        <thead>
          <row>
            <entry>Filter token</entry>

            <entry>Default Value</entry>

            <entry>Token function</entry>
          </row>
        </thead>

        <tbody>
          <row>
            <entry>@file.prefix@</entry>

            <entrytbl cols="1">
              <tbody>
                <row>
                  <entry>file:// (Unix)</entry>
                </row>

                <row>
                  <entry>file:/// (Windows)</entry>
                </row>
              </tbody>
            </entrytbl>

            <entry>Prefix for loading a file through the XSL
            processor.</entry>
          </row>

          <row>
            <entry>@docbook.xml@</entry>

            <entry>(computed at runtime)</entry>

            <entry>Location of the DocBook XML files</entry>
          </row>

          <row>
            <entry>@docbook.xsl@</entry>

            <entry>(computed at runtime)</entry>

            <entry>Location of the DocBook XSL style sheets</entry>
          </row>

          <row>
            <entry>@src.dir@</entry>

            <entry>${basedir}/src</entry>

            <entry>Location of the source files (DocBook, Images etc.)</entry>
          </row>

          <row>
            <entry>@tmp.dir@</entry>

            <entry>${basedir}/target/tmp</entry>

            <entry>Directory for temporary (scratch) files</entry>
          </row>

          <row>
            <entry>@&lt;type&gt;.target.dir@ (type is pdf for PDF, html for
            multi-page HTML and htmlsingle for single-page HTML)</entry>

            <entry>(computed at runtime)</entry>

            <entry>Points to the target directory into which the document is
            rendered</entry>
          </row>
        </tbody>
      </tgroup>
    </table>

    <para>Please refer to the provided driver files in
    <literal>src/styles</literal> in the DocBook Framework on how to use the
    filter set.</para>
  </chapter>

  <chapter>
    <title>Setting environment variables</title>

    <para>How to set paths etc on Mac, Linux, Windows</para>
  </chapter>
</book>