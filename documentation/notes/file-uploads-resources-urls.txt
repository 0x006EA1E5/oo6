To implement a sound and portable resource and resource2url/url2resource system we need to do the following

- we must never user java.io.File directly unless absolutely neccessary (maybe for temp files this ok when using 
	java.io.File.createTempFile(..) as that is portable)
	
- the (final) storage path of an incoming file (via upload) should be calculated by first createing a new OoResource (via OoResourceLoader?)
	and then using its getFile() method to get the destination file
	
- we need a PropertyType 'resource' alongside a custom converter used by org.apache.jackrabbit.ocm.mapper.Mapper/org.otherobjects.cms.jcr.TypeServiceMapperImpl
	
- we need a mapping from OoResourcePathPrefix to a Url prefix

- OoResource should probably get a Url property of type org.otherobjects.cms.Url  and OoResourceLoader then needs to populate that on load


  