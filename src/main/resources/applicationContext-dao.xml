<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.0.xsd">

    <bean id="sessionFactory" class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <property name="configLocation" value="classpath:hibernate.cfg.xml"/>
        <property name="hibernateProperties">
            <value>
                hibernate.dialect=${hibernate.dialect}
                hibernate.query.substitutions=true 'Y', false 'N'
                hibernate.cache.use_second_level_cache=true
                hibernate.cache.provider_class=org.hibernate.cache.EhCacheProvider
                hibernate.jdbc.batch_size 0
                hibernate.show_sql true
            </value>
        </property>
    </bean>

    <bean id="transactionManager" class="org.springframework.orm.hibernate3.HibernateTransactionManager">
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>

    <bean id="userDao" class="org.otherobjects.cms.dao.UserDaoHibernate">
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>

    <bean id="roleDao" class="org.otherobjects.cms.dao.RoleDaoHibernate">
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>
    
    <bean id="secureObject1Dao" class="org.springframework.aop.framework.ProxyFactoryBean">
<!--      <property name="proxyInterfaces"><value>org.otherobjects.cms.dao.SecureObject1Dao</value></property>-->
      <property name="interceptorNames">
         <list>
            <idref bean="secureObjectDao1Security"/>
            <idref local="secureObject1DaoTarget"/>
         </list>
      </property>
   </bean>

   <bean id="secureObject1DaoTarget" class="org.otherobjects.cms.dao.SecureObject1DaoHibernate">
		<property name="sessionFactory" ref="sessionFactory"/>
   </bean>

</beans>
