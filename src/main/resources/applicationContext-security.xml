<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE beans PUBLIC "-//SPRING//DTD BEAN//EN" "http://www.springframework.org/dtd/spring-beans.dtd">

<beans>

	<bean id="filterChainProxy" class="org.acegisecurity.util.FilterChainProxy">
		<property name="filterInvocationDefinitionSource">
			<value>
				<![CDATA[
				CONVERT_URL_TO_LOWERCASE_BEFORE_COMPARISON
				PATTERN_TYPE_APACHE_ANT
				/**=httpSessionContextIntegrationFilter,logoutFilter,authenticationProcessingFilter,securityContextHolderAwareRequestFilter,rememberMeProcessingFilter,anonymousProcessingFilter,exceptionTranslationFilter,filterInvocationInterceptor
				]]>
			</value>
		</property>
	</bean>

	<bean id="httpSessionContextIntegrationFilter" class="org.acegisecurity.context.HttpSessionContextIntegrationFilter" />

	<bean id="logoutFilter" class="org.acegisecurity.ui.logout.LogoutFilter">
		<constructor-arg value="/" /><!-- URL redirected to after logout -->
		<constructor-arg>
			<list>
				<ref bean="rememberMeServices" />
				<bean class="org.acegisecurity.ui.logout.SecurityContextLogoutHandler" />
			</list>
		</constructor-arg>
	</bean>

	<bean id="authenticationProcessingFilter" class="org.acegisecurity.ui.webapp.AuthenticationProcessingFilter">
		<property name="authenticationManager" ref="authenticationManager" />
		<property name="authenticationFailureUrl" value="/go/workbench/login.html" />
		<property name="defaultTargetUrl" value="/" />
		<property name="filterProcessesUrl" value="/j_security_check" />
		<property name="rememberMeServices" ref="rememberMeServices" />
	</bean>

	<bean id="securityContextHolderAwareRequestFilter" class="org.acegisecurity.wrapper.SecurityContextHolderAwareRequestFilter" />

	<bean id="rememberMeProcessingFilter" class="org.acegisecurity.ui.rememberme.RememberMeProcessingFilter">
		<property name="authenticationManager" ref="authenticationManager" />
		<property name="rememberMeServices" ref="rememberMeServices" />
	</bean>

	<bean id="anonymousProcessingFilter" class="org.acegisecurity.providers.anonymous.AnonymousProcessingFilter">
		<property name="key" value="changeThis" />
		<property name="userAttribute" value="anonymousUser,ROLE_ANONYMOUS" />
	</bean>

	<bean id="exceptionTranslationFilter" class="org.acegisecurity.ui.ExceptionTranslationFilter">
		<property name="authenticationEntryPoint">
			<bean class="org.acegisecurity.ui.webapp.AuthenticationProcessingFilterEntryPoint">
				<property name="loginFormUrl" value="/go/workbench/login.html" />
				<property name="forceHttps" value="false" />
			</bean>
		</property>
		<property name="accessDeniedHandler">
			<bean class="org.acegisecurity.ui.AccessDeniedHandlerImpl">
				<property name="errorPage" value="/accessDenied.jsp" />
			</bean>
		</property>
	</bean>

	<bean id="filterInvocationInterceptor" class="org.acegisecurity.intercept.web.FilterSecurityInterceptor">
		<property name="authenticationManager" ref="authenticationManager" />
		<property name="accessDecisionManager">
			<bean class="org.acegisecurity.vote.AffirmativeBased">
				<property name="allowIfAllAbstainDecisions" value="false" />
				<property name="decisionVoters">
					<list>
						<bean class="org.acegisecurity.vote.RoleVoter" />
						<bean class="org.acegisecurity.vote.AuthenticatedVoter" />
					</list>
				</property>
			</bean>
		</property>
		<property name="objectDefinitionSource">
			<value>
				<![CDATA[
				CONVERT_URL_TO_LOWERCASE_BEFORE_COMPARISON 
				PATTERN_TYPE_APACHE_ANT
				/go/workbench/login.html=IS_AUTHENTICATED_ANONYMOUSLY
				/go/**/**=IS_AUTHENTICATED_REMEMBERED
				/go**=IS_AUTHENTICATED_REMEMBERED
				/**=IS_AUTHENTICATED_ANONYMOUSLY
				]]>
			</value>
		</property>
	</bean>

	<bean id="rememberMeServices" class="org.acegisecurity.ui.rememberme.TokenBasedRememberMeServices">
		<property name="userDetailsService" ref="userDao" />
		<property name="key" value="saltForCookie" />
	</bean>

	<bean id="authenticationManager" class="org.acegisecurity.providers.ProviderManager">
		<property name="providers">
			<list>
				<ref local="daoAuthenticationProvider" />
				<bean class="org.acegisecurity.providers.anonymous.AnonymousAuthenticationProvider">
					<property name="key" value="changeThis" />
				</bean>
				<bean class="org.acegisecurity.providers.rememberme.RememberMeAuthenticationProvider">
					<property name="key" value="saltForCookie" />
				</bean>
			</list>
		</property>
	</bean>

	<!-- TODO Confgure salt source -->
	<bean id="daoAuthenticationProvider" class="org.acegisecurity.providers.dao.DaoAuthenticationProvider">
		<property name="userDetailsService" ref="userDao" />
		<property name="passwordEncoder" ref="passwordEncoder" />
		<property name="userCache">
			<bean class="org.acegisecurity.providers.dao.cache.EhCacheBasedUserCache">
				<property name="cache">
					<bean class="org.springframework.cache.ehcache.EhCacheFactoryBean">
						<property name="cacheManager">
							<bean class="org.springframework.cache.ehcache.EhCacheManagerFactoryBean" />
						</property>
						<property name="cacheName" value="userCache" />
					</bean>
				</property>
			</bean>
		</property>
	</bean>

	<bean id="passwordEncoder" class="org.acegisecurity.providers.encoding.ShaPasswordEncoder" />


	<!-- UserDetailsService is the most commonly frequently Acegi Security interface implemented by end users -->

	<!-- This bean is optional; it isn't used by any other bean as it only listens and logs -->
	<bean id="loggerListener" class="org.acegisecurity.event.authentication.LoggerListener" />



	<!--	Instance security	-->
	
	<!-- ~~~~~~~~~~~~~~~~~~ "BEFORE INVOCATION" AUTHORIZATION DEFINITIONS ~~~~~~~~~~~~~~~~ -->

   <!-- ACL permission masks used by this application -->
<!--   <bean id="org.acegisecurity.acls.domain.BasePermission.ADMINISTRATION" class="org.springframework.beans.factory.config.FieldRetrievingFactoryBean">-->
<!--      <property name="staticField"><value>org.acegisecurity.acls.domain.BasePermission.ADMINISTRATION</value></property>-->
<!--   </bean>-->
<!--   <bean id="org.acegisecurity.acls.domain.BasePermission.READ" class="org.springframework.beans.factory.config.FieldRetrievingFactoryBean">-->
<!--      <property name="staticField"><value>org.acegisecurity.acls.domain.BasePermission.READ</value></property>-->
<!--   </bean>-->
<!--   <bean id="org.acegisecurity.acls.domain.BasePermission.DELETE" class="org.springframework.beans.factory.config.FieldRetrievingFactoryBean">-->
<!--      <property name="staticField"><value>org.acegisecurity.acls.domain.BasePermission.DELETE</value></property>-->
<!--   </bean>-->
	
	<!-- An access decision voter that reads ROLE_* configuration settings -->
	<bean id="roleVoter" class="org.acegisecurity.vote.RoleVoter"/>
	
	<!-- An access decision manager used by the business objects -->
	<bean id="businessAccessDecisionManager" class="org.acegisecurity.vote.AffirmativeBased">
	   <property name="allowIfAllAbstainDecisions"><value>false</value></property>
	   <property name="decisionVoters">
	      <list>
	         <ref local="roleVoter"/>
	      </list>
	   </property>
	</bean>
	
	<!-- ========= ACCESS CONTROL LIST LOOKUP MANAGER DEFINITIONS ========= -->

<!--	<bean id="aclCache" class="org.acegisecurity.acls.jdbc.EhCacheBasedAclCache">-->
<!--		<constructor-arg>-->
<!--		   <bean class="org.springframework.cache.ehcache.EhCacheFactoryBean">-->
<!--		      <property name="cacheManager">-->
<!--				<bean class="org.springframework.cache.ehcache.EhCacheManagerFactoryBean"/>-->
<!--		      </property>-->
<!--		      <property name="cacheName">-->
<!--		         <value>aclCache</value>-->
<!--		      </property>-->
<!--		   </bean>-->
<!--		</constructor-arg>-->
<!--	</bean>-->
<!--    -->
<!--	<bean id="lookupStrategy" class="org.acegisecurity.acls.jdbc.BasicLookupStrategy">-->
<!--		<constructor-arg ref="dataSource"/>-->
<!--		<constructor-arg ref="aclCache"/>-->
<!--		<constructor-arg ref="aclAuthorizationStrategy"/>-->
<!--		<constructor-arg>-->
<!--			<bean class="org.acegisecurity.acls.domain.ConsoleAuditLogger"/>-->
<!--		</constructor-arg>-->
<!--	</bean>-->
<!--	-->
<!--	<bean id="aclAuthorizationStrategy" class="org.acegisecurity.acls.domain.AclAuthorizationStrategyImpl">-->
<!--		<constructor-arg>-->
<!--			<list>-->
<!--				<bean class="org.acegisecurity.GrantedAuthorityImpl">-->
<!--					<constructor-arg value="ROLE_ADMIN"/>-->
<!--				</bean>-->
<!--				<bean class="org.acegisecurity.GrantedAuthorityImpl">-->
<!--					<constructor-arg value="ROLE_ADMIN"/>-->
<!--				</bean>-->
<!--				<bean class="org.acegisecurity.GrantedAuthorityImpl">-->
<!--					<constructor-arg value="ROLE_ADMIN"/>-->
<!--				</bean>-->
<!--			</list>-->
<!--		</constructor-arg>-->
<!--	</bean>-->
<!--	-->
<!--	<bean id="aclService" class="org.acegisecurity.acls.jdbc.JdbcMutableAclService">-->
<!--		<constructor-arg ref="dataSource"/>-->
<!--		<constructor-arg ref="lookupStrategy"/>-->
<!--		<constructor-arg ref="aclCache"/>-->
<!--	</bean>-->
	
	<!-- ============== "AFTER INTERCEPTION" AUTHORIZATION DEFINITIONS =========== -->

<!--   <bean id="afterInvocationManager" class="org.acegisecurity.afterinvocation.AfterInvocationProviderManager">-->
<!--      <property name="providers">-->
<!--         <list>-->
<!--            <ref local="afterAclRead"/>-->
<!--         </list>-->
<!--      </property>-->
<!--   </bean>-->
<!--   -->
<!--    Processes AFTER_ACL_READ configuration settings -->
<!--   <bean id="afterAclRead" class="org.acegisecurity.afterinvocation.AclEntryAfterInvocationProvider">-->
<!--      <constructor-arg>-->
<!--      	<ref bean="aclService"/>-->
<!--      </constructor-arg>-->
<!--      <constructor-arg>-->
<!--      	<list>-->
<!--          <ref local="org.acegisecurity.acls.domain.BasePermission.ADMINISTRATION"/>-->
<!--          <ref local="org.acegisecurity.acls.domain.BasePermission.READ"/>-->
<!--      	</list>-->
<!--      </constructor-arg>-->
<!--   </bean>-->
	
	<bean id="secureObjectDao1Security" class="org.acegisecurity.intercept.method.aopalliance.MethodSecurityInterceptor">
	      <property name="authenticationManager"><ref bean="authenticationManager"/></property>
	      <property name="accessDecisionManager"><ref local="businessAccessDecisionManager"/></property>
	      <!--  <property name="afterInvocationManager"><ref local="afterInvocationManager"/></property>-->
	      <property name="objectDefinitionSource">
	         <value>
	            org.otherobjects.cms.dao.SecureObject1Dao.get=ROLE_ADMIN
	         </value>
	      </property>
	   </bean>

</beans>