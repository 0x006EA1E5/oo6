<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE book PUBLIC "-//OASIS//DTD DocBook XML V4.3CR3//EN"
"http://www.oasis-open.org/docbook/xml/4.3CR3/docbookx.dtd">
<book lang="en">
  <bookinfo>
    <title>OTHERobjects CMS</title>

    <subtitle>Developer Guide</subtitle>

    <releaseinfo>0.3</releaseinfo>
  </bookinfo>

  <toc></toc>

  <preface id="preface">
    <title>Preface</title>

    <section id="section-why-another-framework">
      <title>Who is this guide for?</title>

      <para>This guide is for developers who want to extend the capabilities
      of OTHERobjects beyond what is possible via the web interface and third
      party plugins. You'll need this guide if you want to:</para>

      <itemizedlist>
        <listitem>
          <para>Create custom site components</para>
        </listitem>

        <listitem>
          <para>Develop your own plugins</para>
        </listitem>

        <listitem>
          <para>Update and improve OTHERobjects itself</para>
        </listitem>
      </itemizedlist>

      <para>If you are just interested in building a standard website then you
      should read the Site Builder Guide instead. If you're not sure then you
      should start off with that simpler guide and come back here when you
      need to.</para>
    </section>
  </preface>

  <chapter id="chapter-using-the-framework">
    <title>Getting ready</title>

    <para>OTHERobjects in a pure-Java project based on the Spring framework
    and built with Apache Maven. If you are an experienced Java developer you
    will probably have your own preferences for an IDE, build process and app
    server. In this case just skip ahead to the next chapter.</para>

    <para>However, if you're fairly new to Java (or just want a setup that
    will work with the minimum of fuss) then this section will help you get
    your working environment prepared.</para>

    <section>
      <title>Supported platforms</title>

      <para>OTHERobjects should run well on any platform that supports Java
      5.0. This includes Apple Mac OS X 10.4+, Microsoft Windows 2000/XP/Vista
      and most distributions of Linux.</para>

      <para>Although, OTHERobjects runs on Windows it is happiest on UNIX-like
      systems such an Mac OS X and Linux. Windows users may need to install
      Cygwin.</para>
    </section>

    <section id="section-configuring-your-documentation">
      <title>Installing required software</title>

      <para>There is some key software that you will need before you can start
      developing with OTHERobjects.</para>

      <section>
        <title>Java</title>

        <para>You will need a JVM installed and version 5.0 is required. If
        your system does not come with a JVM installed we would recommend the
        latest Sun JDK from java.sun.com/download. Check that your JVM is
        installed:</para>

        <programlisting>brushed:~ rich$ java -version
java version "1.5.0_07" 
Java(TM) 2 Runtime Environment, Standard Edition (build 1.5.0_07-164)
Java HotSpot(TM) Client VM (build 1.5.0_07-87, mixed mode, sharing)
brushed:~ rich$
</programlisting>
      </section>

      <section>
        <title>Apache Maven</title>

        <para>Next you'll need Apache Maven version 2.0.7 or greater. You can
        download it from: <uri>http://maven.apache.org/download.html</uri> .
        Once you have downloaded and installed Maven you should make sure that
        the <emphasis role="bold">mvn</emphasis> command is included in your
        path:</para>

        <para><programlisting>brushed:~ rich$ mvn -version 
Maven version: 2.0.7
brushed:~ rich$
</programlisting></para>

        <para>All of the libraries that OTHERobjects depends on are downloaded
        automatically via Maven. Most of these libraries are in the public
        Maven repository but are few are only available from the OTHERobjects
        repository. You will need to add this repository to the Maven
        setting.xml file at <emphasis
        role="bold">~/.m2/settings.xml</emphasis> (if the file does not exist
        then you should create it with the contents below.</para>

        <programlisting>&lt;settings&gt;
  &lt;profiles&gt;
    &lt;profile&gt;
      &lt;id&gt;otherobjects-repository&lt;/id&gt;
      &lt;activation&gt;
        &lt;activeByDefault&gt;true&lt;/activeByDefault&gt;
      &lt;/activation&gt;
      &lt;repositories&gt;
        &lt;repository&gt;
          &lt;id&gt;otherobjects&lt;/id&gt;
          &lt;name&gt;OTHERobjects repository&lt;/name&gt;
          &lt;url&gt;http://maven.otherobjects.org/repository/&lt;/url&gt;
          &lt;layout&gt;default&lt;/layout&gt;
        &lt;/repository&gt;
      &lt;/repositories&gt;
      &lt;pluginRepositories&gt;
        &lt;pluginRepository&gt;
          &lt;id&gt;otherobjects&lt;/id&gt;
          &lt;name&gt;OTHERobjects repository&lt;/name&gt;
          &lt;url&gt;http://maven.otherobjects.org/repository/&lt;/url&gt;
          &lt;layout&gt;default&lt;/layout&gt;
        &lt;/pluginRepository&gt;
      &lt;/pluginRepositories&gt;
    &lt;/profile&gt;
  &lt;/profiles&gt;
&lt;/settings&gt;</programlisting>
      </section>

      <section>
        <title>ImageMagick</title>

        <para>We use ImageMagick for high quality image resizing. You need
        version 6.3 or later. Download a binary package from <uri>
        http://www.imagemagick.org/script/binary-releases.php </uri> and
        install it. You will need to set your paths and environment variables
        correctly. To test that you have the correct version is installed run
        the following command:</para>

        <para><programlisting>brushed:~ rich$ convert -version
Version: ImageMagick 6.3.4 05/19/07 Q16 http://www.imagemagick.org 
Copyright: Copyright (C) 1999-2007 ImageMagick Studio LLC

brushed:~ rich$
</programlisting></para>
      </section>

      <section>
        <title>Eclipse</title>

        <para>Finally, you will need an IDE. We recommend Eclipse 3.3 with the
        WTP (Web Tools Project) extensions, so download <emphasis>Eclipse for
        JEE Developers</emphasis> from
        http://www.eclipse.org/downloads/.</para>

        <para>Once this is installed you should add the following plugins via
        the Update Manager:</para>

        <table>
          <title>Recommended Eclipse plugins</title>

          <tgroup cols="2">
            <thead>
              <row>
                <entry align="center">Plugin</entry>

                <entry align="center">Update Site</entry>
              </row>
            </thead>

            <tbody>
              <row>
                <entry>Subversive 1.1.7 (Subversion SCM integration)</entry>

                <entry>http://www.polarion.org/projects/subversive/download/1.1/update-site/</entry>
              </row>

              <row>
                <entry>M2Eclipse 0.10 (Maven integration)</entry>

                <entry>http://m2eclipse.codehaus.org/update-dev/</entry>
              </row>

              <row>
                <entry>SpringIDE 2.0.1 (Spring integration)</entry>

                <entry>http://springide.org/updatesite/</entry>
              </row>

              <row>
                <entry>MoreUnit 0.8.2 (Unit testing utilities)</entry>

                <entry>http://moreunit.sourceforge.net/org.moreunit.updatesite/</entry>
              </row>
            </tbody>
          </tgroup>
        </table>

        <para>See http://open.ncsu.edu/se/tutorials/install_plugin/ for a
        instructions on installing plugins. There are other plugins that you
        wish to add later but for now these essential ones will do.</para>

        <para>You should now launch Eclipse and check that your plugins are
        installed via the About Eclipse Platform menu option.</para>

        <para>This guide assumes a basic knowledge of Eclipse. A good short
        tutorial on using Eclipse is available at
        http://www.cs.umd.edu/class/fall2004/cmsc131/EclipseTutorial/.</para>
      </section>
    </section>

    <section>
      <title>Checking out the code</title>

      <para>The next step is to check out the source code to OTHERobjects and
      to the sample project that we will use throughout the rest of this
      guide.</para>

      <para>First of all switch to the SVN Repository Exploring and create a
      new Repository Location. OTHERobjects and the sample project are located
      at:</para>

      <programlisting>svn+ssh://svn.otherworks.com/data/svn/repos-ng
</programlisting>

      <para>You will be able to connect anonymously since you will only need
      read-only access to the repository.</para>

      <figure>
        <title>Creating a repository location</title>

        <mediaobject>
          <imageobject>
            <imagedata fileref="images/svn-setup.png" scale="50" />
          </imageobject>
        </mediaobject>
      </figure>

      <para>At this stage the projects you will need to checkout are:</para>

      <programlisting>otherobjects/trunk
www.maureenmichaelson.com/trunk</programlisting>

      <para>After the checkout the Maven plugin will detect that the projects'
      dependencies and download them. Depending on the speed of your Internet
      connection this mas take a few minutes. Once the download is complete
      you should see these dependencies appear in the Project Explorer.</para>

      <para></para>

      <figure>
        <title>Maven dependencies as they will appear in Eclipse</title>

        <mediaobject>
          <imageobject>
            <imagedata fileref="images/maven-dependencies.png" scale="50" />
          </imageobject>
        </mediaobject>
      </figure>

      <para>Now, with the projects checked out make sure that you have no
      build errors and you can move onto the final step. If you do get errors
      then check the Common problems sectsion of this gunide and failing that
      search on the community forums for some help.</para>
    </section>

    <section>
      <title>Running the tests</title>

      <para>The final step of the preparation is to make sure that the test
      suite runs correctly. This will ensure that you have everything set up
      properly and puts you in a good position to add to the suite as you
      develop new functionality.</para>

      <para>All the tests for the otherobjects project are in src/test/java.
      Select this folder in the Package Explorer and then select Run As...
      JUnit Test. You should also do this for any tests in the sample
      project.</para>
    </section>

    <section>
      <title>Launching the site</title>

      <para>So we are now ready to launch the site. Select the JettyLauncher
      class in src/main/java/org/otherobjects/jetty which is in the sample
      project. To launch in debug mode which in recommended right-click and
      choose Debug As... Java Application.</para>

      <note>
        <para>Information on launching via WTP or custom Jetty plugin needed
        here. How to use -Djava.awt.headless=true.</para>
      </note>

      <para>The console should show the application starting up (they may be
      some SQL error stack traces as the database structure is created for the
      first time but these can be safely ignored). If all has gone well you
      should see a message stating that OTHERobjects is running and you will
      be given the URL to both the site homepage and the administration
      workbench. <emphasis></emphasis><programlisting>**************************************************************
  ___ _____ _   _ _____ ____       _     _           _       
 / _ \_   _| | | | ____|  _ \ ___ | |__ (_) ___  ___| |_ ___ 
| | | || | | |_| |  _| | |_) / _ \| '_ \| |/ _ \/ __| __/ __|
| |_| || | |  _  | |___|  _ &lt; (_) | |_) | |  __/ (__| |_\__ \
 \___/ |_| |_| |_|_____|_| \_\___/|_.__// |\___|\___|\__|___/
                                      |__/                   
                                      
******************* Started up successfully ******************

Site  : http://localhost:8080/go/
Admin : http://localhost:8080/go/workbench/

**************************************************************</programlisting></para>

      <para>Browse around the site and check that it works correctly. To log
      in to the workbench use <emphasis role="bold">admin</emphasis> as the
      username and <emphasis role="bold">admin</emphasis> as the
      password.</para>
    </section>
  </chapter>

  <chapter>
    <title>Writing documentation</title>

    <para>The documentation for OTHERobjects is written in DocBook format and
    processed via JBoss's jdocbook Maven plugin. The design is based on the
    XSL from Hibernate.</para>

    <para>Information on customising DocBook XSL is here:
    <uri>http://www.sagehill.net/docbookxsl/</uri>.</para>

    <para>Documentation stuff do to still:</para>

    <orderedlist>
      <listitem>
        <para>Make figure label font smaller.</para>
      </listitem>

      <listitem>
        <para>Learn how to do links.</para>
      </listitem>

      <listitem>
        <para>Style for suggesting menu commands.</para>
      </listitem>

      <listitem>
        <para>Icons and background for info, warning, important
        paragraphs.</para>
      </listitem>
    </orderedlist>

    <para><important>
        <para>Here is a sample important paragraph.</para>
      </important></para>
  </chapter>

  <chapter>
    <title>Common problems</title>

    <para>Here are tips for dealing with the most common problems that users
    experience.</para>

    <orderedlist>
      <listitem>
        <para>Maven dependencies don't appear: plugin / settings.xml /
        connectivity.</para>
      </listitem>
    </orderedlist>
  </chapter>
</book>